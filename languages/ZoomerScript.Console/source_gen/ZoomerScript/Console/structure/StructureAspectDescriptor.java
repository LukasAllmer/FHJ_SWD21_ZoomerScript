package ZoomerScript.Console.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptWriteToConsole = createDescriptorForWriteToConsole();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, "ZoomerScript");
    deps.aggregatedLanguage(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, "ZoomerScript");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptWriteToConsole);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.WriteToConsole:
        return myConceptWriteToConsole;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForWriteToConsole() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ZoomerScript.Console", "WriteToConsole", 0x14a415702bb8471eL, 0xa39d4ac2ae0330f8L, 0x73080c70fb24b6d5L);
    b.class_(false, false, false);
    // extends: ZoomerScript.structure.ScriptLine
    b.super_(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, 0x73080c70faf8a63eL);
    b.origin("r:59b235bc-0de2-432e-9e54-49164f81054b(ZoomerScript.Console.structure)/8288888793564755669");
    b.version(3);
    b.aggregate("content", 0x73080c70fb24b7a8L).target(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, 0x73080c70faf36843L).optional(false).ordered(true).multiple(false).origin("8288888793564755880").done();
    b.alias("flex");
    return b.create();
  }
}
