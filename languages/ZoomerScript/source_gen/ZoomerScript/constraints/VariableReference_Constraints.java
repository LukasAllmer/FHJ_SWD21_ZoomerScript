package ZoomerScript.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.SNodePointer;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class VariableReference_Constraints extends BaseConstraintsDescriptor {
  public VariableReference_Constraints() {
    super(CONCEPTS.VariableReference$XZ);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.target$bl3V, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return ReferenceScopeProvider.fromHierarchy(CONCEPTS.AbstractDeclaration$6w, new SNodePointer("r:c6e5a7e3-77dc-49f7-8ac6-55c734a3ed40(ZoomerScript.constraints)", "8288888793564426895"));
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept VariableReference$XZ = MetaAdapterFactory.getConcept(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, 0x73080c70faf74f5fL, "ZoomerScript.structure.VariableReference");
    /*package*/ static final SConcept AbstractDeclaration$6w = MetaAdapterFactory.getConcept(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, 0x73080c70faf74d9bL, "ZoomerScript.structure.AbstractDeclaration");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink target$bl3V = MetaAdapterFactory.getReferenceLink(0x7cb4518a20f54c01L, 0x8fe1dda960632cd1L, 0x73080c70faf74f5fL, 0x73080c70faf74fafL, "target");
  }
}
