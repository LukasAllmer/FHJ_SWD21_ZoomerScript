package ZoomerScript.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.style.AbstractStyleClass;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.editor.runtime.descriptor.EditorBuilderEnvironment;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.MPSColors;

public class Styles_StyleSheet {
  public static class KeyWordStyleClass extends AbstractStyleClass {
    public KeyWordStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public KeyWordStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.DARK_BLUE));
      style.set(StyleAttributes.EDITABLE, true);
    }

  }
  public static class NumberStyleClass extends AbstractStyleClass {
    public NumberStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public NumberStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD_ITALIC);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.blue));
      style.set(StyleAttributes.EDITABLE, true);
    }

  }
  public static class BoolStyleClass extends AbstractStyleClass {
    public BoolStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public BoolStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.cyan));
      style.set(StyleAttributes.EDITABLE, true);
    }

  }
  public static class NameStyleClass extends AbstractStyleClass {
    public NameStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public NameStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.DARK_MAGENTA));
    }

  }
  public static class CommentStyleClass extends AbstractStyleClass {
    public CommentStyleClass(EditorContext editorContext, SNode node) {
      super(editorContext, node);
    }
    public CommentStyleClass(EditorBuilderEnvironment builderEnv) {
      super(builderEnv);
    }

    @Override
    public void apply(Style style, EditorCell editorCell) {
      style.set(StyleAttributes.FONT_STYLE, MPSFonts.ITALIC);
      style.set(StyleAttributes.TEXT_COLOR, getStyleRegistry().getSimpleColor(MPSColors.gray));
    }

  }
}
